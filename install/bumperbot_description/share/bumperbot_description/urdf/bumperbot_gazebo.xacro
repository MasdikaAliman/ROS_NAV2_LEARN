<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- Wheels -->
    <gazebo reference="wheel_left_link">
        <mu1>1000000000000000.0</mu1>
        <mu2>1000000000000000.0</mu2>
        <kp>1000000000000.0</kp>
        <kd>10.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>0.1</maxVel>
        <fdir1>1 0 0</fdir1>
    </gazebo>

    <gazebo reference="wheel_right_link">
        <mu1>1000000000000000.0</mu1>
        <mu2>1000000000000000.0</mu2>
        <kp>1000000000000.0</kp>
        <kd>10.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>0.1</maxVel>
        <fdir1>1 0 0</fdir1>
    </gazebo>

    <!-- Caster Wheels -->
    <gazebo reference="caster_rear_link">
        <mu1>0.1</mu1>
        <mu2>0.1</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>1.0</maxVel>
    </gazebo>

    <gazebo reference="caster_front_link">
        <mu1>0.1</mu1>
        <mu2>0.1</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>1.0</maxVel>
    </gazebo>
    <!-- <ros2_control name="GazeboSystem" type="system">
        <hardware>
            <plugin>gazebo_ros2_control/GazeboSystem</plugin>
        </hardware>
        <joint name="wheel_left_joint">
            <command_interface name="velocity">
                <param name="min">-1</param>
                <param name="max">1</param>
            </command_interface>
            <state_interface name="velocity"/>
            <state_interface name="position"/>
        </joint>
        <joint name="wheel_right_joint">
            <command_interface name="velocity">
                <param name="min">-1</param>
                <param name="max">1</param>
            </command_interface>
            <state_interface name="velocity"/>
            <state_interface name="position"/>
        </joint>
    </ros2_control> -->

    <gazebo>
        <plugin name="diff_drive" filename="libgazebo_ros_diff_drive.so">


            <left_joint>wheel_left_joint</left_joint>
            <right_joint>wheel_right_joint</right_joint>
            <wheel_separation>0.17</wheel_separation>
            <wheel_diameter>0.066</wheel_diameter>

            <update_rate>50</update_rate>

            <max_wheel_torque>200</max_wheel_torque>
            <max_wheel_acceleration>10</max_wheel_acceleration>


            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>base_footprint</robot_base_frame>
            <!-- <cmd_vel_timeout>0.5</cmd_vel_timeout> -->
            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <publish_wheel_tf>true</publish_wheel_tf>

        </plugin>
    </gazebo>

    <gazebo>
        <plugin name="diff_robot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
            <ros>
                <!-- <namespace>/tb3</namespace> -->
                <remapping>~/out:=joint_states</remapping>
            </ros>
            <update_rate>30</update_rate>
            <joint_name>wheel_left_joint</joint_name>
            <joint_name>wheel_right_joint</joint_name>
        </plugin>
    </gazebo>


    <gazebo reference="laser_link">
        <sensor name="laser" type="ray">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>false</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <min_angle>0</min_angle>
                        <max_angle>6.28</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.3</min>
                    <max>12</max>
                    <!-- <resolution>0.02</resolution> -->
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <argument>~/out:=scan</argument>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>laser_link</frame_name>
            </plugin>
        </sensor>
    </gazebo>

    <!-- IMU -->
    <gazebo reference="imu_link">
        <sensor name="imu_sensor" type="imu">
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
            <topic>imu</topic>
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <updateRateHZ>100.0</updateRateHZ>
                <frameName>imu_link</frameName>
            </plugin>
            <imu>
                <angular_velocity>
                    <x>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                        </noise>
                    </z>
                </angular_velocity>
                <linear_acceleration>
                    <x>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>1.7e-2</stddev>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>1.7e-2</stddev>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>1.7e-2</stddev>
                        </noise>
                    </z>
                </linear_acceleration>
            </imu>
        </sensor>
    </gazebo>

    <!-- <gazebo>
        <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
            <parameters>/home/dika/Documents/ROS2_LEARN/src/bumperbot_controller/config/ros2_control.yaml</parameters>
        </plugin>
    </gazebo> -->

    <gazebo reference="base_link">
        <material>Gazebo/Red</material>
    </gazebo>

    <gazebo reference="wheel_right_link">
        <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="wheel_left_link">
        <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="caster_front_link">
        <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="caster_rear_link">
        <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="laser_link">
        <material>Gazebo/Black</material>
    </gazebo>



    <!-- <gazebo>
    <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
        <robot_param>robot_description</robot_param>
        <parameters>$(find bumperbot_description)/config/ros2_control.yaml"</parameters>
    </plugin>
    
</gazebo>-->



</robot>